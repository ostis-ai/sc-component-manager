name: Tests

on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  run_tests:
    name: ${{ matrix.os }}, ${{ matrix.build_type }}, ${{ matrix.file_memory }}, ${{ matrix.config.cxx }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        file_memory: ["Dictionary"]
        build_type: ["Debug", "Release"]
        config:
          - { cc: "gcc", cxx: "g++" }

    steps:
      - name: Clone repositories
        run: |
            git clone https://github.com/ostis-ai/sc-machine.git 
            cd sc-machine 
            git checkout component_manager 
            git submodule update --init --recursive 
            cd sc-tools/sc-component-manager
            git fetch origin pull/${{ github.event.number }}/head:pr 
            git checkout pr

      - name: Install dependencies (Ubuntu)
        if: startswith(matrix.os, 'ubuntu')
        run: |
              cd sc-machine/scripts
              ./install_deps_ubuntu.sh --dev && ./install_sc_component_manager_dependencies.sh

      - name: Build all
        run: cd sc-machine/scripts && ./build_sc_machine.sh -cm && ./build_kb.sh

      - name: Restore build caches
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.config.cxx }}-${{ matrix.build_type }}-${{ matrix.file_memory }}   

      - name: Build
        id: run_cmake
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
          FILE_MEMORY: ${{ matrix.file_memory }}
          BUILD_TYPE: ${{ matrix.build_type }}
          COVERAGE: OFF
          SANITIZER_TYPE: none
        run: cd sc-machine && scripts/ci/make-tests.sh

      - name: Run tests
        id: run_tests
        run: cd sc-machine && scripts/ci/run-tests.sh

      - name: Run sc-component-manager
        id: run_sc_component_manager
        run: |
          cd sc-machine/scripts
          ./run_sc_component_manager.sh -c ../sc-machine.ini
